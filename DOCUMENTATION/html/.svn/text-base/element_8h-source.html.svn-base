<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Titan: element.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.5 -->
<div class="qindex"><a class="qindex" href="index.html">Main&nbsp;Page</a> | <a class="qindex" href="namespaces.html">Namespace List</a> | <a class="qindex" href="hierarchy.html">Class&nbsp;Hierarchy</a> | <a class="qindex" href="annotated.html">Class&nbsp;List</a> | <a class="qindex" href="files.html">File&nbsp;List</a> | <a class="qindex" href="functions.html">Class&nbsp;Members</a> | <a class="qindex" href="globals.html">File&nbsp;Members</a></div>
<h1>element.h</h1><a href="element_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre>00001 <span class="comment">/*******************************************************************</span>
00002 <span class="comment"> * Copyright (C) 2003 University at Buffalo</span>
00003 <span class="comment"> *</span>
00004 <span class="comment"> * This software can be redistributed free of charge.  See COPYING</span>
00005 <span class="comment"> * file in the top distribution directory for more details.</span>
00006 <span class="comment"> *</span>
00007 <span class="comment"> * This software is distributed in the hope that it will be useful,</span>
00008 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
00009 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span>
00010 <span class="comment"> *</span>
00011 <span class="comment"> * Author: </span>
00012 <span class="comment"> * Description: </span>
00013 <span class="comment"> *</span>
00014 <span class="comment"> *******************************************************************</span>
00015 <span class="comment"> * $Id: element.h,v 1.2 2003/11/07 17:58:49 kdalbey Exp $ </span>
00016 <span class="comment"> */</span>
00017 
00018 <span class="preprocessor">#ifndef ELEMENT_H</span>
00019 <span class="preprocessor"></span><span class="preprocessor">#define ELEMENT_H</span>
00020 <span class="preprocessor"></span><span class="preprocessor">#include "<a class="code" href="preproc_2node_8h.html">node.h</a>"</span>
00021 <span class="preprocessor">#include "<a class="code" href="preproc_2boundary_8h.html">boundary.h</a>"</span>
00022 
00023 <span class="keyword">class </span><a class="code" href="classElement.html">Element</a> {
00024 
00025 
00026   <span class="keyword">friend</span> <span class="keywordtype">void</span> <a class="code" href="classElement.html#n8">drawit</a>(<a class="code" href="classElement.html">Element</a>);
00027 
00028  <span class="keyword">public</span>:
00029 
00030   <a class="code" href="classElement.html#a0">Element</a>();
00031   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a105">setparameters</a>(<span class="keywordtype">int</span>, <a class="code" href="classNode.html">Node</a>*[], <span class="keywordtype">int</span>, <span class="keywordtype">int</span>*);
00032   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a106">order_nodes</a>();
00033   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a107">case1</a>();
00034   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a108">case2</a>();
00035   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a109">case3</a>();
00036   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a110">case4</a>();
00037   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a111">case5</a>();
00038   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a112">create_m_node</a>(<span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*);
<a name="l00039"></a><a class="code" href="classElement.html#a113">00039</a>   <span class="keywordtype">int</span> <a class="code" href="classElement.html#a113">getid</a>(){<span class="keywordflow">return</span> <a class="code" href="classElement.html#r45">elementid</a>;};
00040   <span class="comment">//void determine_the_key(unsigned, double*, double*);</span>
00041   <span class="keywordtype">unsigned</span>* <a class="code" href="classElement.html#a7">pass_key</a>(); 
00042   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a115">determine_neighbors</a>(<span class="keywordtype">int</span>, <a class="code" href="classElement.html">Element</a>*);
<a name="l00043"></a><a class="code" href="classElement.html#a116">00043</a>   <a class="code" href="classNode.html">Node</a>** <a class="code" href="classElement.html#a116">get_element_node</a>(){<span class="keywordflow">return</span> <a class="code" href="classElement.html#r47">element_nodes</a>;};
<a name="l00044"></a><a class="code" href="classElement.html#a117">00044</a>   <a class="code" href="classBoundary.html">Boundary</a>* <a class="code" href="classElement.html#a117">get_element_bound</a>(<span class="keywordtype">int</span> iside, <span class="keywordtype">int</span> i){<span class="keywordflow">return</span> <a class="code" href="classElement.html#r46">boundary</a>[iside][i];};
00045   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a118">myproc</a>(<span class="keywordtype">int</span>, <span class="keywordtype">int</span>, <span class="keywordtype">int</span>);
<a name="l00046"></a><a class="code" href="classElement.html#a119">00046</a>   <span class="keywordtype">int</span>  <a class="code" href="classElement.html#a57">get_myprocess</a>() {<span class="keywordflow">return</span> <a class="code" href="classElement.html#r0">myprocess</a>;};
<a name="l00047"></a><a class="code" href="classElement.html#a120">00047</a>   <span class="keywordtype">int</span>* <a class="code" href="classElement.html#a97">get_elm_loc</a>() {<span class="keywordflow">return</span> <a class="code" href="classElement.html#r23">elm_loc</a>;};
<a name="l00048"></a><a class="code" href="classElement.html#a121">00048</a>   <span class="keywordtype">int</span>  <a class="code" href="classElement.html#a121">get_elm_mat</a>() {<span class="keywordflow">return</span> <a class="code" href="classElement.html#r3">material</a>;};
00049   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a122">write_node_data</a>(ofstream*);
00050   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a123">write_element_data</a>(ofstream*);
00051   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a124">write_element_data_bin</a>(FILE *);
00052   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a125">reset_written_flag</a>();
00053   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a126">find_boundary</a>(<span class="keywordtype">int</span>, <span class="keywordtype">int</span>, <a class="code" href="classBoundary.html">Boundary</a>*);
00054   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a127">set_boundary</a>(<a class="code" href="classBoundary.html">Boundary</a> *b);
00055 
00056   <span class="comment">//Edge* get_element_edges();</span>
00057   <a class="code" href="classElement.html">Element</a>* <a class="code" href="classElement.html#a27">get_neighbors</a>(<span class="keywordtype">int</span>);
00058   <span class="keywordtype">void</span> <a class="code" href="classElement.html#a129">determine_opposite_brother</a>();
<a name="l00059"></a><a class="code" href="classElement.html#a130">00059</a>   <a class="code" href="classElement.html">Element</a>* <a class="code" href="classElement.html#a130">get_opposite_brother</a>() {<span class="keywordflow">return</span> <a class="code" href="classElement.html#r49">opposite_brother</a>;};
00060 
00061  <span class="keyword">private</span>:
<a name="l00062"></a><a class="code" href="classElement.html#r45">00062</a>   <span class="keywordtype">int</span> <a class="code" href="classElement.html#r45">elementid</a>;
<a name="l00063"></a><a class="code" href="classElement.html#r46">00063</a>   <a class="code" href="classBoundary.html">Boundary</a> *<a class="code" href="classElement.html#r46">boundary</a>[4][2];
<a name="l00064"></a><a class="code" href="classElement.html#r47">00064</a>   <a class="code" href="classNode.html">Node</a>* <a class="code" href="classElement.html#r47">element_nodes</a>[9];
00065   <span class="comment">//Edge* element_edges[4];</span>
<a name="l00066"></a><a class="code" href="classElement.html#r48">00066</a>   <a class="code" href="classElement.html">Element</a>* <a class="code" href="classElement.html#r8">neighbor</a>[4];
<a name="l00067"></a><a class="code" href="classElement.html#r3">00067</a>   <span class="keywordtype">int</span> <a class="code" href="classElement.html#r3">material</a>;
<a name="l00068"></a><a class="code" href="classElement.html#r0">00068</a>   <span class="keywordtype">int</span> <a class="code" href="classElement.html#r0">myprocess</a>; 
<a name="l00069"></a><a class="code" href="classElement.html#r23">00069</a>   <span class="keywordtype">int</span> <a class="code" href="classElement.html#r23">elm_loc</a>[2];
<a name="l00070"></a><a class="code" href="classElement.html#r19">00070</a>   <span class="keywordtype">int</span> <a class="code" href="classElement.html#r19">which_son</a>;
<a name="l00071"></a><a class="code" href="classElement.html#r49">00071</a>   <a class="code" href="classElement.html">Element</a>* <a class="code" href="classElement.html#r49">opposite_brother</a>;
00072 
00073 };
00074 <span class="preprocessor">#endif</span>
</pre></div><hr size="1"><address style="align: right;"><small>Generated on Wed Aug 30 17:29:02 2006 for Titan by
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border=0 > 
</a>1.3.5 </small></address>
</body>
</html>
