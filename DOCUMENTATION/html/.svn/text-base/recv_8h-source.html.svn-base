<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Titan: recv.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.9.1 -->
<div class="qindex"><a class="qindex" href="index.html">Main&nbsp;Page</a> | <a class="qindex" href="namespaces.html">Namespace List</a> | <a class="qindex" href="hierarchy.html">Class&nbsp;Hierarchy</a> | <a class="qindex" href="annotated.html">Class&nbsp;List</a> | <a class="qindex" href="dirs.html">Directories</a> | <a class="qindex" href="files.html">File&nbsp;List</a> | <a class="qindex" href="functions.html">Class&nbsp;Members</a> | <a class="qindex" href="globals.html">File&nbsp;Members</a></div>
<div class="nav">
<a class="el" href="dir_000000.html">src</a>&nbsp;/&nbsp;<a class="el" href="dir_000001.html">header</a></div>
<h1>recv.h</h1><a href="recv_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment">00001 <span class="comment">/*******************************************************************</span>
00002 <span class="comment"> * Copyright (C) 2003 University at Buffalo</span>
00003 <span class="comment"> *</span>
00004 <span class="comment"> * This software can be redistributed free of charge.  See COPYING</span>
00005 <span class="comment"> * file in the top distribution directory for more details.</span>
00006 <span class="comment"> *</span>
00007 <span class="comment"> * This software is distributed in the hope that it will be useful,</span>
00008 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
00009 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span>
00010 <span class="comment"> *</span>
00011 <span class="comment"> * Author: </span>
00012 <span class="comment"> * Description: </span>
00013 <span class="comment"> *</span>
00014 <span class="comment"> *******************************************************************</span>
00015 <span class="comment"> * $Id: recv.h 2 2003-08-13 19:26:11Z sorokine $ </span>
00016 <span class="comment"> */</span>
00017 
00018 <span class="preprocessor">#ifndef RECV_H</span>
00019 <span class="preprocessor"></span><span class="preprocessor">#define RECV_H</span>
00020 <span class="preprocessor"></span>
<a name="l00021"></a><a class="code" href="classRecv.html">00021</a> <span class="keyword">class </span><a class="code" href="classRecv.html">Recv</a>
00022 {
00023  <span class="keyword">public</span>:
<a name="l00024"></a><a class="code" href="classRecv.html#o0">00024</a>   <a class="code" href="classElement.html">Element</a>*   targetP;
<a name="l00025"></a><a class="code" href="classRecv.html#o1">00025</a>   <span class="keywordtype">unsigned</span>   sender[KEYLENGTH];
<a name="l00026"></a><a class="code" href="classRecv.html#o2">00026</a>   <span class="keywordtype">unsigned</span>   target[KEYLENGTH];
<a name="l00027"></a><a class="code" href="classRecv.html#o3">00027</a>   <span class="keywordtype">unsigned</span>   sender_son1[KEYLENGTH];
<a name="l00028"></a><a class="code" href="classRecv.html#o4">00028</a>   <span class="keywordtype">unsigned</span>   sender_son2[KEYLENGTH];
<a name="l00029"></a><a class="code" href="classRecv.html#o5">00029</a>   <span class="keywordtype">int</span>        sender_order[2];
<a name="l00030"></a><a class="code" href="classRecv.html#o6">00030</a>   <span class="keywordtype">int</span>        sender_gen;
<a name="l00031"></a><a class="code" href="classRecv.html#o7">00031</a>   <span class="keywordtype">int</span>        sender_refined;
<a name="l00032"></a><a class="code" href="classRecv.html#o8">00032</a>   <span class="keywordtype">int</span>        side;
<a name="l00033"></a><a class="code" href="classRecv.html#o9">00033</a>   <span class="keywordtype">int</span>        sender_id;
<a name="l00034"></a><a class="code" href="classRecv.html#o10">00034</a>   <a class="code" href="classRecv.html">Recv</a>*      pre;
<a name="l00035"></a><a class="code" href="classRecv.html#o11">00035</a>   <a class="code" href="classRecv.html">Recv</a>*      next;
<a name="l00036"></a><a class="code" href="classRecv.html#o12">00036</a>   <span class="keywordtype">int</span>        myid;
00037   <span class="keywordtype">void</span>       identify ();
00038 
<a name="l00039"></a><a class="code" href="classRecv.html#a1">00039</a>   <a class="code" href="classRecv.html">Recv</a>(<a class="code" href="classHashTable.html">HashTable</a>* ht_elem_ptr, <span class="keywordtype">unsigned</span>* recv_buf, <span class="keywordtype">int</span> assoc, <span class="keywordtype">int</span> iam)
00040     {
00041       <span class="keywordtype">int</span> i, j;
00042       side = INIT;
00043       myid = iam;
00044       <span class="keywordflow">for</span>(i=0;i&lt;KEYLENGTH;i++) sender[i] = *(recv_buf+i);
00045       <span class="keywordflow">for</span>(i=KEYLENGTH;i&lt;2*KEYLENGTH;i++) sender_son1[i-KEYLENGTH] = *(recv_buf+i);
00046       <span class="keywordflow">for</span>(i=2*KEYLENGTH;i&lt;3*KEYLENGTH;i++) sender_son2[i-2*KEYLENGTH] = *(recv_buf+i);
00047       sender_order[0] = *(recv_buf+i);
00048       sender_order[1] = *(recv_buf+i+1);
00049       sender_gen = *(recv_buf+i+2);
00050       sender_refined = *(recv_buf+i+3);
00051       <span class="keywordflow">for</span>(i=0;i&lt;KEYLENGTH;i++) target[i] = recv_buf[5*<a class="code" href="constant_8h.html#a10">KEYLENGTH</a>+i];
00052       targetP = (<a class="code" href="classElement.html">Element</a>*)ht_elem_ptr-&gt;<a class="code" href="classHashTable.html#a5">lookup</a>(target);
00053       sender_id = assoc;
00054       identify();
00055       pre =NULL;
00056       next = NULL;
00057     }
<a name="l00058"></a><a class="code" href="classRecv.html#a2">00058</a>   <a class="code" href="classRecv.html">Recv</a>(){
00059     next   = NULL;
00060     pre    = NULL;
00061   }
<a name="l00062"></a><a class="code" href="classRecv.html#a3">00062</a>   ~<a class="code" href="classRecv.html">Recv</a>(){
00063      <span class="keywordflow">if</span>(next)
00064        next-&gt;<a class="code" href="classRecv.html#o10">pre</a> = pre;
00065      <span class="keywordflow">if</span>(pre)
00066        pre-&gt;<a class="code" href="classRecv.html#o11">next</a> = next;
00067   }
00068 
00069 };
00070 
00071 <span class="preprocessor">#endif</span>
</pre></div><hr size="1"><address style="align: right;"><small>Generated on Tue Jul 3 12:45:53 2007 for Titan by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.3.9.1 </small></address>
</body>
</html>
