<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Titan: GisLines.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.9.1 -->
<div class="qindex"><a class="qindex" href="index.html">Main&nbsp;Page</a> | <a class="qindex" href="namespaces.html">Namespace List</a> | <a class="qindex" href="hierarchy.html">Class&nbsp;Hierarchy</a> | <a class="qindex" href="annotated.html">Class&nbsp;List</a> | <a class="qindex" href="dirs.html">Directories</a> | <a class="qindex" href="files.html">File&nbsp;List</a> | <a class="qindex" href="functions.html">Class&nbsp;Members</a> | <a class="qindex" href="globals.html">File&nbsp;Members</a></div>
<div class="nav">
<a class="el" href="dir_000000.html">src</a>&nbsp;/&nbsp;<a class="el" href="dir_000010.html">gisapi</a></div>
<h1>GisLines.h</h1><a href="GisLines_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment">00001 <span class="comment">/*******************************************************************</span>
00002 <span class="comment"> * Copyright (C) 2003 University at Buffalo</span>
00003 <span class="comment"> *</span>
00004 <span class="comment"> * This software can be redistributed free of charge.  See COPYING</span>
00005 <span class="comment"> * file in the top distribution directory for more details.</span>
00006 <span class="comment"> *</span>
00007 <span class="comment"> * This software is distributed in the hope that it will be useful,</span>
00008 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
00009 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span>
00010 <span class="comment"> *</span>
00011 <span class="comment"> * Author: </span>
00012 <span class="comment"> * Description: </span>
00013 <span class="comment"> *</span>
00014 <span class="comment"> *******************************************************************</span>
00015 <span class="comment"> * $Id: GisLines.h 120 2007-06-07 19:21:02Z dkumar $ </span>
00016 <span class="comment"> */</span>
00017 
00018 <span class="preprocessor">#ifndef GisLines_H</span>
00019 <span class="preprocessor"></span><span class="preprocessor">#define GisLines_H</span>
00020 <span class="preprocessor"></span>
00021 <span class="preprocessor">#include &lt;string&gt;</span>
00022 <span class="preprocessor">#include &lt;iostream&gt;</span>
00023 <span class="preprocessor">#include &lt;fstream&gt;</span>
00024 <span class="preprocessor">#include &lt;vector&gt;</span>
00025 <span class="keyword">using</span> <span class="keyword">namespace </span>std;
00026 
00027 <span class="keyword">class </span><a class="code" href="classGisLabels.html">GisLabels</a>;
00028 
<a name="l00029"></a><a class="code" href="classGisLine.html">00029</a> <span class="keyword">class </span><a class="code" href="classGisLine.html">GisLine</a>
00030 {
00031 <span class="keyword">public</span>:
00032 
00033         <a class="code" href="classGisLine.html">GisLine</a>();
00034         <a class="code" href="classGisLine.html">GisLine</a>(vector&lt;double&gt;&amp; xS, vector&lt;double&gt;&amp; yS);
00035         
<a name="l00036"></a><a class="code" href="classGisLine.html#a2">00036</a>         <span class="keyword">virtual</span> ~<a class="code" href="classGisLine.html">GisLine</a>(){} 
00037 
<a name="l00038"></a><a class="code" href="classGisLine.html#a3">00038</a>         <span class="keywordtype">int</span> numberOfPoints()
00039         { <span class="keywordflow">return</span> _nPoints; }
00040 
00041         <span class="keywordtype">void</span> getPoints(<span class="keywordtype">double</span>* xCoords, <span class="keywordtype">double</span>* yCoords);
00042 
00043         <span class="keywordtype">void</span> insertPoints (<span class="keywordtype">double</span> x, <span class="keywordtype">double</span> y);
00044 
<a name="l00045"></a><a class="code" href="classGisLine.html#a6">00045</a>         <span class="keywordtype">void</span> setIndex (<span class="keywordtype">int</span> lineIndex)
00046         { _lineIndex = lineIndex; }
00047         
<a name="l00048"></a><a class="code" href="classGisLine.html#a7">00048</a>         <span class="keywordtype">void</span> setLabel (string lineLabel)
00049         { _lineLabel = lineLabel; }
00050 
<a name="l00051"></a><a class="code" href="classGisLine.html#a8">00051</a>         <span class="keywordtype">int</span> getIndex ()
00052         { <span class="keywordflow">return</span> _lineIndex; }
00053 
<a name="l00054"></a><a class="code" href="classGisLine.html#a9">00054</a>         string getLabel ()
00055         { <span class="keywordflow">return</span> _lineLabel; }
00056         
00057         <span class="keywordtype">bool</span> findPoints(<span class="keywordtype">double</span> x, <span class="keywordtype">double</span> y, <span class="keywordtype">double</span> scale);
00058 
00059         <span class="keywordtype">void</span> print();
00060 
<a name="l00061"></a><a class="code" href="classGisLine.html#o0">00061</a>         vector&lt;double&gt; _xS;
<a name="l00062"></a><a class="code" href="classGisLine.html#o1">00062</a>         vector&lt;double&gt; _yS;
<a name="l00063"></a><a class="code" href="classGisLine.html#a12">00063</a>         <a class="code" href="classGisLine.html">GisLine</a>(<span class="keyword">const</span> <a class="code" href="classGisLine.html">GisLine</a>&amp; a)
00064         {
00065                 _xS = a.<a class="code" href="classGisLine.html#o0">_xS</a>;
00066                 _yS = a.<a class="code" href="classGisLine.html#o1">_yS</a>;
00067                 _lineIndex = 0;
00068                 _nPoints = (int)_xS.size();
00069         }
00070 
<a name="l00071"></a><a class="code" href="classGisLine.html#a13">00071</a>         <a class="code" href="classGisLine.html">GisLine</a>&amp; operator=(<span class="keyword">const</span> <a class="code" href="classGisLine.html">GisLine</a>&amp; a)
00072         {
00073                 <span class="keywordflow">if</span> ( <span class="keyword">this</span> != &amp;a )
00074                 {       
00075                         _xS = a.<a class="code" href="classGisLine.html#o0">_xS</a>; _yS = a.<a class="code" href="classGisLine.html#o1">_yS</a>;
00076                         _lineIndex = 0;
00077                         _nPoints = (int)_xS.size();
00078                 }
00079                 <span class="keywordflow">return</span> *<span class="keyword">this</span>;
00080         }
00081 
00082 <span class="keyword">protected</span>:
<a name="l00083"></a><a class="code" href="classGisLine.html#p0">00083</a>         <span class="keywordtype">int</span> _nPoints;
<a name="l00084"></a><a class="code" href="classGisLine.html#p1">00084</a>         <span class="keywordtype">int</span> _lineIndex;
<a name="l00085"></a><a class="code" href="classGisLine.html#p2">00085</a>         string _lineLabel;
00086 <span class="keyword">private</span>:
00087 
00088 };
00089 
<a name="l00090"></a><a class="code" href="classGisLines.html">00090</a> <span class="keyword">class </span><a class="code" href="classGisLines.html">GisLines</a>
00091 {
00092 <span class="keyword">public</span>:
00093 
00094         <a class="code" href="classGisLines.html">GisLines</a>(<span class="keyword">const</span> string&amp; name);
00095         
<a name="l00096"></a><a class="code" href="classGisLines.html#a1">00096</a>         <span class="keyword">virtual</span> ~<a class="code" href="classGisLines.html">GisLines</a>(){} 
00097 
<a name="l00098"></a><a class="code" href="classGisLines.html#a2">00098</a>         <span class="keywordtype">bool</span> good()
00099         { <span class="keywordflow">return</span> _status; }
00100 
<a name="l00101"></a><a class="code" href="classGisLines.html#a3">00101</a>         <span class="keywordtype">int</span> numberOfLines()
00102         { <span class="keywordflow">return</span> _nLines; }
00103 
<a name="l00104"></a><a class="code" href="classGisLines.html#a4">00104</a>         <span class="keywordtype">void</span> insertLine (<span class="keyword">const</span> <a class="code" href="classGisLine.html">GisLine</a>&amp; readLine)
00105         { _lines.push_back(readLine); }
00106 
00107         <span class="keywordtype">int</span> getLineSize(<span class="keywordtype">int</span> nLine, <span class="keywordtype">int</span>* lineSize);
00108 
00109         <span class="keywordtype">int</span> getIndex(<span class="keywordtype">int</span> nLine, <span class="keywordtype">int</span>* lineIndex);
00110 
00111         <span class="keywordtype">int</span> getLabel(<span class="keywordtype">int</span> nLine, string* lineStr);
00112 
00113         <span class="keywordtype">int</span> getLine(<span class="keywordtype">int</span> nLine, <span class="keywordtype">double</span>* x, <span class="keywordtype">double</span>* y);
00114 
00115         <span class="keywordtype">void</span> setIndices(<a class="code" href="classGisLabels.html">GisLabels</a>&amp; labels, <span class="keywordtype">double</span> scale);
00116 
00117         <span class="keywordtype">void</span> print();
00118 
00119 <span class="keyword">protected</span>:
00120 
<a name="l00121"></a><a class="code" href="classGisLines.html#p0">00121</a>         <span class="keywordtype">bool</span> _status;
00122 
<a name="l00123"></a><a class="code" href="classGisLines.html#p1">00123</a>         <span class="keywordtype">int</span> _nLines;
<a name="l00124"></a><a class="code" href="classGisLines.html#p2">00124</a>         vector&lt;GisLine&gt; _lines;
00125 
00126 <span class="keyword">private</span>:
00127         
00128 <span class="comment">// No copy allowed</span>
00129         <a class="code" href="classGisLines.html">GisLines</a>(<span class="keyword">const</span> <a class="code" href="classGisLines.html">GisLines</a>&amp;);
00130         <a class="code" href="classGisLines.html">GisLines</a>&amp; operator=(<span class="keyword">const</span> <a class="code" href="classGisLines.html">GisLines</a>&amp;);
00131 };
00132 
00133 <span class="preprocessor">#endif</span>
</pre></div><hr size="1"><address style="align: right;"><small>Generated on Tue Jul 3 12:45:53 2007 for Titan by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.3.9.1 </small></address>
</body>
</html>
