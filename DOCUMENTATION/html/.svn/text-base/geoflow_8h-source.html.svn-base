<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Titan: geoflow.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.9.1 -->
<div class="qindex"><a class="qindex" href="index.html">Main&nbsp;Page</a> | <a class="qindex" href="namespaces.html">Namespace List</a> | <a class="qindex" href="hierarchy.html">Class&nbsp;Hierarchy</a> | <a class="qindex" href="annotated.html">Class&nbsp;List</a> | <a class="qindex" href="dirs.html">Directories</a> | <a class="qindex" href="files.html">File&nbsp;List</a> | <a class="qindex" href="functions.html">Class&nbsp;Members</a> | <a class="qindex" href="globals.html">File&nbsp;Members</a></div>
<div class="nav">
<a class="el" href="dir_000000.html">src</a>&nbsp;/&nbsp;<a class="el" href="dir_000001.html">header</a></div>
<h1>geoflow.h</h1><a href="geoflow_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment">00001 <span class="comment">/*******************************************************************</span>
00002 <span class="comment"> * Copyright (C) 2003 University at Buffalo</span>
00003 <span class="comment"> *</span>
00004 <span class="comment"> * This software can be redistributed free of charge.  See COPYING</span>
00005 <span class="comment"> * file in the top distribution directory for more details.</span>
00006 <span class="comment"> *</span>
00007 <span class="comment"> * This software is distributed in the hope that it will be useful,</span>
00008 <span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
00009 <span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span>
00010 <span class="comment"> *</span>
00011 <span class="comment"> * Author: </span>
00012 <span class="comment"> * Description: </span>
00013 <span class="comment"> *</span>
00014 <span class="comment"> *******************************************************************</span>
00015 <span class="comment"> * $Id: geoflow.h 152 2007-06-27 20:29:54Z dkumar $ </span>
00016 <span class="comment"> */</span>
00017 
00018 <span class="preprocessor">#ifndef __GEOFLOW</span>
00019 <span class="preprocessor"></span><span class="preprocessor">#define __GEOFLOW</span>
00020 <span class="preprocessor"></span>
00021 <span class="comment">/* geoflow header file */</span>
<a name="l00022"></a><a class="code" href="geoflow_8h.html#a0">00022</a> <span class="preprocessor">#define WEIGHT_ADJUSTER 1</span>
00023 <span class="preprocessor"></span>
00024 
<a name="l00025"></a><a class="code" href="geoflow_8h.html#a1">00025</a> <span class="preprocessor">#define NUM_FREEFALLS_2_STOP 2 //stopping criteria parameter</span>
00026 <span class="preprocessor"></span><span class="comment">//#define STOPCRIT_CHANGE_FLUX</span>
00027 <span class="comment">//#define STOPCRIT_CHANGE_BED</span>
00028 <span class="comment">//#define STOPCRIT_CHANGE_SOURCE</span>
00029 <span class="comment">//#define DO_EROSION</span>
00030 
00031 <span class="comment">//#define REFINE_LEVEL 3</span>
00032 <span class="keyword">extern</span> <span class="keywordtype">int</span> REFINE_LEVEL; <span class="comment">//make REFINE_LEVEL a global variable that can be changed set it in  Read_grid() (datread.C) or loadrun() (restart.C)</span>
00033 <span class="comment">//(mdj)2007-04-11 #define MIN_GENERATION -1 //minimum refinement level</span>
<a name="l00034"></a><a class="code" href="geoflow_8h.html#a2">00034</a> <span class="preprocessor">#define MIN_GENERATION -3 //minimum refinement level</span>
00035 <span class="preprocessor"></span>
00037 <span class="keywordtype">void</span> <a class="code" href="geoflow_8h.html#a4">correct</a>(<a class="code" href="classHashTable.html">HashTable</a>* NodeTable, <a class="code" href="classHashTable.html">HashTable</a>* El_Table,
00038              <span class="keywordtype">double</span> dt, <a class="code" href="structMatProps.html">MatProps</a>* matprops_ptr, 
00039              <a class="code" href="structFluxProps.html">FluxProps</a> *fluxprops, <a class="code" href="structTimeProps.html">TimeProps</a> *timeprops,
00040              <span class="keywordtype">void</span> *EmTemp,
00041              <span class="keywordtype">double</span> *forceint, <span class="keywordtype">double</span> *forcebed, 
00042              <span class="keywordtype">double</span> *eroded, <span class="keywordtype">double</span> *deposited);
00043 
00045 <span class="keywordtype">void</span> <a class="code" href="geoflow_8h.html#a5">checknodesol</a>(<a class="code" href="classHashTable.html">HashTable</a>*);
00046 
00048 <span class="keywordtype">double</span> <a class="code" href="geoflow_8h.html#a6">element_weight</a>(<a class="code" href="classHashTable.html">HashTable</a>* El_Table, <a class="code" href="classHashTable.html">HashTable</a>*, <span class="keywordtype">int</span> myid, <span class="keywordtype">int</span> nump);
00049 
00051 <span class="keywordtype">void</span> <a class="code" href="geoflow_8h.html#a7">calc_stats</a>(<a class="code" href="classHashTable.html">HashTable</a>* El_Table, <a class="code" href="classHashTable.html">HashTable</a>* NodeTable, <span class="keywordtype">int</span> myid, 
00052                 <a class="code" href="structMatProps.html">MatProps</a>* matprops, <a class="code" href="structTimeProps.html">TimeProps</a>* timeprops, 
00053                 <a class="code" href="structStatProps.html">StatProps</a>* statprops, <a class="code" href="structDISCHARGE.html">DISCHARGE</a>* discharge, <span class="keywordtype">double</span> d_time);
00054 
00056 <span class="keywordtype">void</span> <a class="code" href="geoflow_8h.html#a8">calc_volume</a>(<a class="code" href="classHashTable.html">HashTable</a>* El_Table, <span class="keywordtype">int</span> myid, <a class="code" href="structMatProps.html">MatProps</a>* matprops_ptr, 
00057                  <a class="code" href="structTimeProps.html">TimeProps</a>* timeprops_ptr, <span class="keywordtype">double</span> d_time, <span class="keywordtype">double</span>* v_star, <span class="keywordtype">double</span>* nz_star);
00058 
00060 <span class="keywordtype">double</span> <a class="code" href="geoflow_8h.html#a9">get_max_momentum</a>(<a class="code" href="classHashTable.html">HashTable</a>* El_Table, <a class="code" href="structMatProps.html">MatProps</a>* matprops_ptr);
00061 
00063 <span class="keywordtype">void</span> <a class="code" href="geoflow_8h.html#a10">sim_end_warning</a>(<a class="code" href="classHashTable.html">HashTable</a>* El_Table, <a class="code" href="structMatProps.html">MatProps</a>* matprops_ptr, 
00064                      <a class="code" href="structTimeProps.html">TimeProps</a>* timeprops_ptr,<span class="keywordtype">double</span> v_star);
00065 
00067 <span class="keywordtype">void</span> <a class="code" href="geoflow_8h.html#a11">out_final_stats</a>(<a class="code" href="structTimeProps.html">TimeProps</a>* timeprops_ptr,<a class="code" href="structStatProps.html">StatProps</a>* statprops_ptr);
00068 
00070 <span class="keywordtype">void</span> <a class="code" href="geoflow_8h.html#a12">setup_geoflow</a>(<a class="code" href="classHashTable.html">HashTable</a>* El_Table, <a class="code" href="classHashTable.html">HashTable</a>* NodeTable, <span class="keywordtype">int</span> myid, 
00071                    <span class="keywordtype">int</span> nump, <a class="code" href="structMatProps.html">MatProps</a>* matprops_ptr, <a class="code" href="structTimeProps.html">TimeProps</a> *timeprops_ptr);
00072 
00074 <span class="keywordtype">void</span> <a class="code" href="geoflow_8h.html#a13">slopes</a>(<a class="code" href="classHashTable.html">HashTable</a>* El_Table, <a class="code" href="classHashTable.html">HashTable</a>* NodeTable, <a class="code" href="structMatProps.html">MatProps</a>* matprops_ptr);
00075 
00077 <span class="keywordtype">double</span> <a class="code" href="geoflow_8h.html#a14">get_coef_and_eigen</a>(<a class="code" href="classHashTable.html">HashTable</a>* El_Table, <a class="code" href="classHashTable.html">HashTable</a>* NodeTable, 
00078                           <a class="code" href="structMatProps.html">MatProps</a>* matprops_ptr, <a class="code" href="structFluxProps.html">FluxProps</a>* fluxprops_ptrs,
00079                           <a class="code" href="structTimeProps.html">TimeProps</a>* timeprops_ptr, <span class="keywordtype">int</span> ghost_flag);
00080 
00082 <span class="keywordtype">void</span> <a class="code" href="geoflow_8h.html#a15">move_data</a>(<span class="keywordtype">int</span> nump, <span class="keywordtype">int</span> myid, <a class="code" href="classHashTable.html">HashTable</a>* El_Table, <a class="code" href="classHashTable.html">HashTable</a>* NodeTable, <a class="code" href="structTimeProps.html">TimeProps</a>* timeprops_ptr);
00083 
00085 <span class="keywordtype">void</span> <a class="code" href="geoflow_8h.html#a16">delete_ghost_elms</a>(<a class="code" href="classHashTable.html">HashTable</a>* El_Table, <span class="keywordtype">int</span> myid) ;
00086 
00087 
00089 <span class="keywordtype">void</span> <a class="code" href="geoflow_8h.html#a17">calc_edge_states</a>(<a class="code" href="classHashTable.html">HashTable</a>* El_Table, <a class="code" href="classHashTable.html">HashTable</a>* NodeTable,
00090                       <a class="code" href="structMatProps.html">MatProps</a>* matprops_ptr, <a class="code" href="structTimeProps.html">TimeProps</a>* timeprops_ptr,
00091                       <span class="keywordtype">int</span> myid, <span class="keywordtype">int</span>* order_flag, <span class="keywordtype">double</span> *outflow);
00092 
<a name="l00094"></a><a class="code" href="geoflow_8h.html#a18">00094</a> <span class="keyword">inline</span> <span class="keywordtype">double</span> <a class="code" href="geoflow_8h.html#a18">c_sgn</a>(<span class="keywordtype">double</span> zz)
00095 {
00096   <span class="keywordtype">double</span> sgn;
00097   <span class="keywordflow">if</span>(zz &gt; GEOFLOW_TINY)
00098     sgn = 1;
00099   <span class="keywordflow">else</span> <span class="keywordflow">if</span>(zz &lt; -GEOFLOW_TINY)
00100     sgn = -1;
00101   <span class="keywordflow">else</span> 
00102     sgn = 0;
00103 
00104   <span class="keywordflow">return</span> sgn;
00105 }
00106 
<a name="l00108"></a><a class="code" href="geoflow_8h.html#a19">00108</a> <span class="keyword">inline</span> <span class="keywordtype">double</span> <a class="code" href="geoflow_8h.html#a20">c_dmin1</a>(<span class="keywordtype">double</span> d1, <span class="keywordtype">double</span> d2) {
00109   
00110   <span class="keywordflow">if</span>(d1&gt; d2)
00111     d1 = d2;
00112 
00113   <span class="keywordflow">return</span> d1;
00114 }
00115 
<a name="l00117"></a><a class="code" href="geoflow_8h.html#a20">00117</a> <span class="keyword">inline</span> <span class="keywordtype">double</span> <a class="code" href="geoflow_8h.html#a20">c_dmin1</a>(<span class="keywordtype">double</span> d1, <span class="keywordtype">double</span> d2, <span class="keywordtype">double</span> d3) {
00118   
00119   <span class="keywordflow">if</span>(d1&gt; d2)
00120     d1 = d2;
00121   <span class="keywordflow">if</span>(d1 &gt; d3)
00122     d1 = d3;
00123 
00124   <span class="keywordflow">return</span> d1;
00125 }
00126 
<a name="l00128"></a><a class="code" href="geoflow_8h.html#a21">00128</a> <span class="keyword">inline</span> <span class="keywordtype">double</span> <a class="code" href="geoflow_8h.html#a22">c_dmax1</a>(<span class="keywordtype">double</span> d1, <span class="keywordtype">double</span> d2) {
00129   
00130   <span class="keywordflow">if</span>(d1 &lt; d2)
00131     d1 = d2;
00132 
00133   <span class="keywordflow">return</span> d1;
00134 }
00135 
<a name="l00137"></a><a class="code" href="geoflow_8h.html#a22">00137</a> <span class="keyword">inline</span> <span class="keywordtype">double</span> <a class="code" href="geoflow_8h.html#a22">c_dmax1</a>(<span class="keywordtype">double</span> d1, <span class="keywordtype">double</span> d2, <span class="keywordtype">double</span> d3) {
00138   
00139   <span class="keywordflow">if</span>(d1 &lt; d2)
00140     d1 = d2;
00141   <span class="keywordflow">if</span>(d1 &lt; d3)
00142     d1 = d3;
00143 
00144   <span class="keywordflow">return</span> d1;
00145 }
00146 
00147 <span class="comment">// a c++ dabs function </span>
<a name="l00148"></a><a class="code" href="geoflow_8h.html#a23">00148</a> <span class="keyword">inline</span> <span class="keywordtype">double</span> <a class="code" href="geoflow_8h.html#a23">dabs</a>(<span class="keywordtype">double</span> dd) {
00149   <span class="keywordflow">if</span>(dd &lt; 0)
00150     dd = -dd;
00151 
00152   <span class="keywordflow">return</span> dd;
00153 }
00154   
00155 <span class="comment">/* fortran calls */</span>
00156 <span class="preprocessor">#ifdef SUNOS </span>
00157 <span class="preprocessor"></span>
00158 <span class="keyword">extern</span> <span class="stringliteral">"C"</span> <span class="keywordtype">void</span> gmfggetcoef_(<span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*,
00159                              <span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*);
00160 
00162 <span class="keyword">extern</span> <span class="stringliteral">"C"</span> <span class="keywordtype">void</span> eigen_(<span class="keywordtype">double</span> *Uvec, <span class="keywordtype">double</span> *eigenvxmax, <span class="keywordtype">double</span> *eigenvymax, 
00163                        <span class="keywordtype">double</span> *evalue, <span class="keywordtype">double</span> *tiny, <span class="keywordtype">double</span> *kactxy, 
00164                        <span class="keywordtype">double</span> *gravity, <span class="keywordtype">double</span> *VxVy);
00165 
00167 <span class="keyword">extern</span> <span class="stringliteral">"C"</span> <span class="keywordtype">void</span> predict_(<span class="keywordtype">double</span> *Uvec, <span class="keywordtype">double</span> *dUdx, <span class="keywordtype">double</span> *dUdy, 
00168                          <span class="keywordtype">double</span> *Uprev, <span class="keywordtype">double</span> *tiny, <span class="keywordtype">double</span> *kactxy,
00169                          <span class="keywordtype">double</span> *dt2, <span class="keywordtype">double</span> *g, <span class="keywordtype">double</span> *curv,
00170                          <span class="keywordtype">double</span> *bedfrictang, <span class="keywordtype">double</span> *intfrictang, 
00171                          <span class="keywordtype">double</span> *dgdx, <span class="keywordtype">double</span> *frict_tiny, <span class="keywordtype">int</span> *order_flag, 
00172                          <span class="keywordtype">double</span> *VxVy, <span class="keywordtype">int</span> *if_stopped, <span class="keywordtype">double</span> *fluxcoef);
00173 
00175 <span class="keyword">extern</span> <span class="stringliteral">"C"</span> <span class="keywordtype">void</span> correct_(<span class="keywordtype">double</span> *Uvec, <span class="keywordtype">double</span> *Uprev, <span class="keywordtype">double</span> *fluxxp, 
00176                          <span class="keywordtype">double</span> *fluxyp, <span class="keywordtype">double</span> *fluxxm, <span class="keywordtype">double</span> *fluxym, 
00177                          <span class="keywordtype">double</span> *tiny, <span class="keywordtype">double</span> *dtdx, <span class="keywordtype">double</span> *dtdy, <span class="keywordtype">double</span> *dt,
00178                          <span class="keywordtype">double</span> *dUdx, <span class="keywordtype">double</span> *dUdy, <span class="keywordtype">double</span> *xslope, 
00179                          <span class="keywordtype">double</span> *yslope, <span class="keywordtype">double</span> *curv, <span class="keywordtype">double</span> *intfrictang, 
00180                          <span class="keywordtype">double</span> *bedfrictang, <span class="keywordtype">double</span> *g, <span class="keywordtype">double</span> *kactxy, 
00181                          <span class="keywordtype">double</span> *dgdx, <span class="keywordtype">double</span> *frict_tiny, <span class="keywordtype">double</span> *forceint, 
00182                          <span class="keywordtype">double</span> *forcebed, <span class="keywordtype">int</span> *do_erosion, <span class="keywordtype">double</span> *eroded, 
00183                          <span class="keywordtype">double</span> *VxVy, <span class="keywordtype">int</span> *if_stopped, <span class="keywordtype">double</span> *fluxcoef);
00184 <span class="preprocessor">#endif</span>
00185 <span class="preprocessor"></span><span class="preprocessor">#ifdef IBMSP</span>
00186 <span class="preprocessor"></span><span class="keyword">extern</span> <span class="stringliteral">"C"</span> <span class="keywordtype">void</span> gmfggetcoef(<span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*, 
00187                             <span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*, <span class="keywordtype">double</span>*);
00188 <span class="keyword">extern</span> <span class="stringliteral">"C"</span> <span class="keywordtype">void</span> eigen(<span class="keywordtype">double</span> *Uvec, <span class="keywordtype">double</span> *eigenvxmax, <span class="keywordtype">double</span> *eigenvymax, 
00189                       <span class="keywordtype">double</span> *evalue, <span class="keywordtype">double</span> *tiny, <span class="keywordtype">double</span> *kactxy, 
00190                       <span class="keywordtype">double</span> *gravity, <span class="keywordtype">double</span> *VxVy);
00191 
00192 <span class="preprocessor">#endif</span>
00193 <span class="preprocessor"></span>
00194 
00195 <span class="preprocessor">#endif</span>
</pre></div><hr size="1"><address style="align: right;"><small>Generated on Tue Jul 3 12:45:53 2007 for Titan by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.3.9.1 </small></address>
</body>
</html>
