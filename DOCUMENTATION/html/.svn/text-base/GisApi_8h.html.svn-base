<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Titan: GisApi.h File Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.9.1 -->
<div class="qindex"><a class="qindex" href="index.html">Main&nbsp;Page</a> | <a class="qindex" href="namespaces.html">Namespace List</a> | <a class="qindex" href="hierarchy.html">Class&nbsp;Hierarchy</a> | <a class="qindex" href="annotated.html">Class&nbsp;List</a> | <a class="qindex" href="dirs.html">Directories</a> | <a class="qindex" href="files.html">File&nbsp;List</a> | <a class="qindex" href="functions.html">Class&nbsp;Members</a> | <a class="qindex" href="globals.html">File&nbsp;Members</a></div>
<div class="nav">
<a class="el" href="dir_000000.html">src</a>&nbsp;/&nbsp;<a class="el" href="dir_000010.html">gisapi</a></div>
<h1>GisApi.h File Reference</h1><code>#include &lt;string&gt;</code><br>

<p>
<a href="GisApi_8h-source.html">Go to the source code of this file.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Namespaces</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">namespace &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacestd.html">std</a></td></tr>

<tr><td colspan="2"><br><h2>Classes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structGis__Head.html">Gis_Head</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">structure holding the GIS header  <a href="structGis__Head.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structGis__Grid.html">Gis_Grid</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">structure holding the GIS terrain elevation data  <a href="structGis__Grid.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structGis__Raster.html">Gis_Raster</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">structure holding the GIS material map  <a href="structGis__Raster.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structGis__Image.html">Gis_Image</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">structure holding information about a matching GIS image, for the gmfg viewer  <a href="structGis__Image.html#_details">More...</a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">struct &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="structGis__Vector.html">Gis_Vector</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">structure holding information about GIS vector data (putting roads, bridges, buildings etc on the image map), for the gmfg viewer  <a href="structGis__Vector.html#_details">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a0">G_API_MAXFLOAT</a>&nbsp;&nbsp;&nbsp;1.0e31</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a1">G_API_BIGFLOAT</a>&nbsp;&nbsp;&nbsp;1.0e32</td></tr>

<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a2">Initialize_GIS_data</a> (char *GISDbase, char *location, char *mapset, char *raster_file)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">initialize the GIS digital elevation map  <a href="#a2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a3">Initialize_Raster_data</a> (char *GISDbase, char *location, char *mapset, char *raster_file)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">initialize the GIS material map  <a href="#a3"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a4">Initialize_Image_data</a> (char *GISDbase, char *location, char *mapset, char *raster_file)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">initialize the matching visual image map to cover the terrain (texture wrapping) for the gmfg viewer  <a href="#a4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a5">Initialize_Vector_data</a> (char *GISDbase, char *location, char *mapset, char *vector_file)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">initialize the matching vector data (where do you put symbols representing roads, bridges, buildings etc on the map) for the gmfg viewer  <a href="#a5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a6">Delete_GIS_data</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">deletes the GIS elevation map data  <a href="#a6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a7">Delete_Raster_data</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">deletes the GIS material map data  <a href="#a7"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a8">Delete_Image_data</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">deletes the image map (for texture wrapping the terrain in the gmfg viewer) data  <a href="#a8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a9">Delete_Vector_data</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">delets the vector data (where to put symbols on the map representing roads, bridges, buildings, etc in the gmfg viewer)  <a href="#a9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a10">Get_raster_categories</a> (int *n_categories)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return number of categories in a raster map Input: none, Output: n_categories - number of categories, Return: 0 if OK, see table otherwise.  <a href="#a10"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a11">Get_vector_n_lines</a> (int *n_lines)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return number of lines in a vector map, Input: none, Output: n_lines - number of lines, Return: 0 if OK, see table otherwise.  <a href="#a11"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a12">Get_vector_line_type</a> (int line_index, int *line_type)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return line type for line with index line_index, Input: line_index - index of line, Output: line_type - line type, Return: 0 if OK, see table otherwise.  <a href="#a12"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a13">Get_vector_line_label</a> (int line_index, string *line_str)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return line label for line with index line_index, Input: line_index - index of line, Output: line_str - line label, Return: 0 if OK, see table otherwise.  <a href="#a13"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a14">Get_vector_line_size</a> (int line_index, int *line_size)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return number of elements for line with index line_index, Input: line_index - index of line, Output: line_size - number of line elements, Return: 0 if OK, see table otherwise.  <a href="#a14"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a15">Get_vector_line</a> (int line_index, double *line_x, double *line_y)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return number of lines in a vector map, Input: line_index - index of line, Output: line_x - line elements x coordinate, line_y - line elements y coordinate, Return: 0 if OK, see table otherwise.  <a href="#a15"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a16">Get_raster_category_name</a> (int category_id, char *category_name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return category name the given category number, Input: category_id - category number, Output: category_name - category name, Return: 0 if OK, see table otherwise.  <a href="#a16"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a17">Get_xmax</a> (double resolution, double *xmax)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of original elevation data grid, Input: resolution - resolution, Output: xmax - maximum X coordinate of original grid, Return: 0 if OK, see table otherwise.  <a href="#a17"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a18">Get_raster_xmax</a> (double resolution, double *xmax)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of original raster (material map) grid, Input: resolution - resolution, Output: xmax - maximum X coordinate of original grid, Return: 0 if OK, see table otherwise.  <a href="#a18"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a19">Get_image_xmax</a> (double resolution, double *xmax)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of original image (for texture wrapping) grid, Input: resolution - resolution, Output: xmax - maximum X coordinate of original grid, Return: 0 if OK, see table otherwise.  <a href="#a19"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a20">Get_xmin</a> (double resolution, double *xmin)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of original elevation map grid, Input: resolution - resolution, Output: xmin - minimum X coordinate of original grid, Return: 0 if OK, see table otherwise.  <a href="#a20"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a21">Get_raster_xmin</a> (double resolution, double *xmin)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of original raster (material map) grid, Input: resolution - resolution, Output: xmin - minimum X coordinate of original grid, Return: 0 if OK, see table otherwise.  <a href="#a21"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a22">Get_image_xmin</a> (double resolution, double *xmin)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of original image (for texture wrapping) grid, Input: resolution - resolution, Output: xmin - minimum X coordinate of original grid, Return: 0 if OK, see table otherwise.  <a href="#a22"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a23">Get_ymax</a> (double resolution, double *ymax)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of original elevatio map grid, Input: resolution - resolution, Output: ymax - maximum Y coordinate of original grid, Return: 0 if OK, see table otherwise.  <a href="#a23"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a24">Get_raster_ymax</a> (double resolution, double *ymax)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of original raster (material map) grid, Input: resolution - resolution, Output: ymax - maximum Y coordinate of original grid, Return: 0 if OK, see table otherwise.  <a href="#a24"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a25">Get_image_ymax</a> (double resolution, double *ymax)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of original image (for texture wrapping) grid, Input: resolution - resolution, Output: ymax - maximum Y coordinate of original grid, Return: 0 if OK, see table otherwise.  <a href="#a25"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a26">Get_ymin</a> (double resolution, double *ymin)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of original elevation map grid, Input: resolution - resolution, Output: ymin - minimum Y coordinate of original grid, Return: 0 if OK, see table otherwise.  <a href="#a26"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a27">Get_raster_ymin</a> (double resolution, double *ymin)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of original raster (material map) grid, Input: resolution - resolution, Output: ymin - minimum Y coordinate of original grid, Return: 0 if OK, see table otherwise.  <a href="#a27"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a28">Get_image_ymin</a> (double resolution, double *ymin)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of original image (for texture wrapping) grid, Input: resolution - resolution, Output: ymin - minimum Y coordinate of original grid, Return: 0 if OK, see table otherwise.  <a href="#a28"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a29">Get_elev_min</a> (double resolution, double *elevmin)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return minimum elevation of original grid, Input: resolution - resolution, Output: elevmin - minimum elevation of original grid, Return: 0 if OK, see table otherwise.  <a href="#a29"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a30">Get_elev_max</a> (double resolution, double *elevmax)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return maximum elevation of original grid, Input: resolution - resolution, Output: elevmax - maximum elevation of original grid, Return: 0 if OK, see table otherwise.  <a href="#a30"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a31">Get_window</a> (double *xmin, double *xmax, double *ymin, double *ymax)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of active window of the elevation map, Input: none, Output: xmin - minimum X coordinate of active region, xmax - maximum X coordinate of active region, ymin - minimum Y coordinate of active region, ymax - maximum Y coordinate of active region, Return: 0 if error, 1 otherwise.  <a href="#a31"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a32">Get_raster_window</a> (double *xmin, double *xmax, double *ymin, double *ymax)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of active window of the raster (material) map, Input: none, Output: xmin - minimum X coordinate of active region, xmax - maximum X coordinate of active region, ymin - minimum Y coordinate of active region, ymax - maximum Y coordinate of active region, Return: 0 if error, 1 otherwise.  <a href="#a32"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a33">Get_image_window</a> (double *xmin, double *xmax, double *ymin, double *ymax)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return extents of active window of the image (for texture wrapping), Input: none, Output: xmin - minimum X coordinate of active region, xmax - maximum X coordinate of active region, ymin - minimum Y coordinate of active region, ymax - maximum Y coordinate of active region, Return: 0 if error, 1 otherwise.  <a href="#a33"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a34">Get_max_resolution</a> (double *resolution)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return original resolution of elevation map grid, Input: none, Output: resolution - resolution, Return: 0 if OK, see table otherwise.  <a href="#a34"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a35">Get_raster_resolution</a> (double *resolution)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return original resolution of raster (material) map grid, Input: none, Output: resolution - resolution, Return: 0 if OK, see table otherwise.  <a href="#a35"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a36">Get_image_resolution</a> (double *resolution)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return original resolution of image (for texture wrapping) grid, Input: none, Output: resolution - resolution, Return: 0 if OK, see table otherwise.  <a href="#a36"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a37">Get_number_of_rows</a> (int *rows)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return number of rows of original elevation map grid, Input: none, Output: rows - number of rows of original grid, Return: 0 if error, 1 otherwise.  <a href="#a37"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a38">Get_raster_nrows</a> (int *rows)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return number of rows of original raster (material) map grid, Input: none, Output: rows - number of rows of original grid, Return: 0 if error, 1 otherwise.  <a href="#a38"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a39">Get_image_nrows</a> (int *rows)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return number of rows of original image (for texture wrapping) grid, Input: none, Output: rows - number of rows of original grid, Return: 0 if error, 1 otherwise.  <a href="#a39"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a40">Get_number_of_columns</a> (int *cols)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return number of columns of original elevation map grid, Input: none, Output: cols - number of columns of original grid, Return: 0 if error, 1 otherwise.  <a href="#a40"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a41">Get_raster_ncols</a> (int *cols)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return number of columns of original raster (material) map grid, Input: none, Output: cols - number of columns of original grid, Return: 0 if error, 1 otherwise.  <a href="#a41"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a42">Get_image_ncols</a> (int *cols)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return number of columns of original image (for texture wrapping) grid, Input: none, Output: cols - number of columns of original grid, Return: 0 if error, 1 otherwise.  <a href="#a42"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a43">Get_elevation</a> (double resolution, double x, double y, double *elev)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return elevation at point XY of original grid, Input: resolution - resolution, x - point X coordinate, y - Point Y coordinate, Output: elev - elevation at point XY of original grid, Return: 0 if OK, see table otherwise.  <a href="#a43"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a44">Get_slope</a> (double resolution, double x, double y, double *xslope, double *yslope)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return slope at point XY of original grid, Input: resolution - resolution, x - point X coordinate, y - Point Y coordinate, Output: xslope - slope at point XY of original grid in X direction, yslope - slope at point XY of original grid in Y direction, Return: 0 if OK, see table otherwise.  <a href="#a44"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a45">Get_curvature</a> (double resolution, double x, double y, double *xcurv, double *ycurv)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return curvature at point XY of original grid, Input: resolution - resolution, x - point X coordinate, y - Point Y coordinate, Output: xcurv - curvature at point XY of original grid in X direction, ycurv - curvature at point XY of original grid in Y direction, Return: 0 if OK, see table otherwise.  <a href="#a45"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a46">Get_raster_id</a> (double resolution, double x, double y, int *category_id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return category number at point XY of raster map, Input: resolution - resolution, x - point X coordinate, y - Point Y coordinate, Output: category_id - category number at point XY of raster map, Return: 0 if OK, see table otherwise.  <a href="#a46"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a47">Get_image</a> (double resolution, double x, double y, unsigned char *<a class="el" href="hdfdefs_8h.html#a25">r</a>, unsigned char *g, unsigned char *b)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return RGB at point XY of image, Input: resolution - resolution, x - point X coordinate, y - Point Y coordinate, Output: r - R component at point XY of image, g - G component at point XY of image, b - B component at point XY of image, Return: 0 if OK, see table otherwise.  <a href="#a47"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a48">Get_elevation_array</a> (double *resolution, double *x, double *y, double *elev, int number_of_locations)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return elevation at points XY of original grid, Input: resolution - resolution, x - array with points X coordinate, y - array with points Y coordinate, number_of_locations - number of points, Output: elev - elevation at points XY of original grid, Return: 0 if OK, see table otherwise.  <a href="#a48"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a49">Get_slope_array</a> (double *resolution, double *x, double *y, double *xslope, double *yslope, int number_of_locations)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return slope at points XY of original grid, Input: resolution - resolution, x - array with points X coordinate, y - array with points Y coordinate, number_of_locations - number of points, Output: xslope - slopes at points XY of original grid in X direction, yslope - slopes at points XY of original grid in Y direction, Return: 0 if OK, see table otherwise.  <a href="#a49"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a50">Get_curvature_array</a> (double *resolution, double *x, double *y, double *xcurv, double *ycurv, int number_of_locations)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return curvature at points XY of original grid, Input: resolution - resolution, x - array with points X coordinate, y - array with points Y coordinate, number_of_locations - number of points, Output: xcurv - curvature at point XY of original grid in X direction, ycurv - curvature at point XY of original grid in Y direction, Return: 0 if OK, see table otherwise.  <a href="#a50"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a51">Get_raster_id_array</a> (double *resolution, double *x, double *y, int *category_id, int number_of_locations)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return category number at points XY of raster map, Input: resolution - resolution, x - array with points X coordinate, y - array with points Y coordinate, number_of_locations - number of points, Output: category_id - category number at points XY of raster map, Return: 0 if OK, see table otherwise.  <a href="#a51"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a52">Get_image_array</a> (double *resolution, double *x, double *y, unsigned char *<a class="el" href="hdfdefs_8h.html#a25">r</a>, unsigned char *g, unsigned char *b, int number_of_locations)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return RGB at point XY of image, Input: resolution - resolution, x - array with points X coordinate, y - array with points Y coordinate, number_of_locations - number of points, Output: r - R component at points XY of image, g - G component at points XY of image, b - B component at points XY of image, Return: 0 if OK, see table otherwise.  <a href="#a52"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a53">Get_elevation_grid</a> (double resolution, double xmin, double xmax, double ymin, double ymax, double *elev)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return elevation at points XY of original grid, Input: resolution - resolution, xmin - minimum X coordinate of points window, xmax - maximum X coordinate of points window, ymin - minimum Y coordinate of points window, ymax - maximum Y coordinate of points window, Output: elev - elevation at points XY of selected window, Return: 0 if OK, see table otherwise.  <a href="#a53"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a54">Get_slope_grid</a> (double resolution, double xmin, double xmax, double ymin, double ymax, double *slope)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return elevation at points XY of original grid, Input: resolution - resolution, xmin - minimum X coordinate of points window, xmax - maximum X coordinate of points window, ymin - minimum Y coordinate of points window, ymax - maximum Y coordinate of points window, Output: elev - elevation at points XY of selected window, Return: 0 if OK, see table otherwise.  <a href="#a54"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a55">Get_curvature_grid</a> (double resolution, double xmin, double xmax, double ymin, double ymax, double *xcurv, double *ycurv)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return elevation at points XY of original grid, Input: resolution - resolution, xmin - minimum X coordinate of points window, xmax - maximum X coordinate of points window, ymin - minimum Y coordinate of points window, ymax - maximum Y coordinate of points window, Output: elev - elevation at points XY of selected window, Return: 0 if OK, see table otherwise.  <a href="#a55"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a56">Get_raster_id_grid</a> (double resolution, double xmin, double xmax, double ymin, double ymax, int *category_id)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return category number at points XY of original grid, Input: resolution - resolution, xmin - minimum X coordinate of points window, xmax - maximum X coordinate of points window, ymin - minimum Y coordinate of points window, ymax - maximum Y coordinate of points window, Output: category_id - category number at points XY of selected window, Return: 0 if OK, see table otherwise.  <a href="#a56"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a57">Get_image_grid</a> (double resolution, double xmin, double xmax, double ymin, double ymax, unsigned char *<a class="el" href="hdfdefs_8h.html#a25">r</a>, unsigned char *g, unsigned char *b)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return RGB at points XY of original grid, Input: resolution - resolution, xmin - minimum X coordinate of points window, xmax - maximum X coordinate of points window, ymin - minimum Y coordinate of points window, ymax - maximum Y coordinate of points window, Output: r - R component at points XY of selected window, g - G component at points XY of selected window, b - B component at points XY of selected window, Return: 0 if OK, see table otherwise.  <a href="#a57"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="GisApi_8h.html#a58">Set_vector_scale</a> (double scale)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set vector scale, used to calculate precision, Input: scale - Scale of the vector data, ex.: 10000, API pre-defines scale at 50000.  <a href="#a58"></a><br></td></tr>
</table>
<hr><h2>Define Documentation</h2>
<a class="anchor" name="a1" doxytag="GisApi.h::G_API_BIGFLOAT"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">#define G_API_BIGFLOAT&nbsp;&nbsp;&nbsp;1.0e32          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a0" doxytag="GisApi.h::G_API_MAXFLOAT"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">#define G_API_MAXFLOAT&nbsp;&nbsp;&nbsp;1.0e31          </td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
    </td>
  </tr>
</table>
<hr><h2>Function Documentation</h2>
<a class="anchor" name="a6" doxytag="GisApi.h::Delete_GIS_data"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Delete_GIS_data           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
deletes the GIS elevation map data 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a8" doxytag="GisApi.h::Delete_Image_data"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Delete_Image_data           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
deletes the image map (for texture wrapping the terrain in the gmfg viewer) data 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a7" doxytag="GisApi.h::Delete_Raster_data"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Delete_Raster_data           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
deletes the GIS material map data 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a9" doxytag="GisApi.h::Delete_Vector_data"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Delete_Vector_data           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
delets the vector data (where to put symbols on the map representing roads, bridges, buildings, etc in the gmfg viewer) 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a45" doxytag="GisApi.h::Get_curvature"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_curvature           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xcurv</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ycurv</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return curvature at point XY of original grid, Input: resolution - resolution, x - point X coordinate, y - Point Y coordinate, Output: xcurv - curvature at point XY of original grid in X direction, ycurv - curvature at point XY of original grid in Y direction, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a50" doxytag="GisApi.h::Get_curvature_array"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_curvature_array           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double *&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xcurv</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ycurv</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>number_of_locations</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return curvature at points XY of original grid, Input: resolution - resolution, x - array with points X coordinate, y - array with points Y coordinate, number_of_locations - number of points, Output: xcurv - curvature at point XY of original grid in X direction, ycurv - curvature at point XY of original grid in Y direction, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a55" doxytag="GisApi.h::Get_curvature_grid"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_curvature_grid           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>xmin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>ymin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xcurv</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ycurv</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return elevation at points XY of original grid, Input: resolution - resolution, xmin - minimum X coordinate of points window, xmax - maximum X coordinate of points window, ymin - minimum Y coordinate of points window, ymax - maximum Y coordinate of points window, Output: elev - elevation at points XY of selected window, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a30" doxytag="GisApi.h::Get_elev_max"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_elev_max           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>elevmax</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return maximum elevation of original grid, Input: resolution - resolution, Output: elevmax - maximum elevation of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a29" doxytag="GisApi.h::Get_elev_min"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_elev_min           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>elevmin</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return minimum elevation of original grid, Input: resolution - resolution, Output: elevmin - minimum elevation of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a43" doxytag="GisApi.h::Get_elevation"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_elevation           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>elev</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return elevation at point XY of original grid, Input: resolution - resolution, x - point X coordinate, y - Point Y coordinate, Output: elev - elevation at point XY of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a48" doxytag="GisApi.h::Get_elevation_array"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_elevation_array           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double *&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>elev</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>number_of_locations</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return elevation at points XY of original grid, Input: resolution - resolution, x - array with points X coordinate, y - array with points Y coordinate, number_of_locations - number of points, Output: elev - elevation at points XY of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a53" doxytag="GisApi.h::Get_elevation_grid"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_elevation_grid           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>xmin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>ymin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>elev</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return elevation at points XY of original grid, Input: resolution - resolution, xmin - minimum X coordinate of points window, xmax - maximum X coordinate of points window, ymin - minimum Y coordinate of points window, ymax - maximum Y coordinate of points window, Output: elev - elevation at points XY of selected window, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a47" doxytag="GisApi.h::Get_image"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_image           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>unsigned char *&nbsp;</td>
          <td class="mdname" nowrap> <em>r</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>unsigned char *&nbsp;</td>
          <td class="mdname" nowrap> <em>g</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>unsigned char *&nbsp;</td>
          <td class="mdname" nowrap> <em>b</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return RGB at point XY of image, Input: resolution - resolution, x - point X coordinate, y - Point Y coordinate, Output: r - R component at point XY of image, g - G component at point XY of image, b - B component at point XY of image, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a52" doxytag="GisApi.h::Get_image_array"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_image_array           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double *&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>unsigned char *&nbsp;</td>
          <td class="mdname" nowrap> <em>r</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>unsigned char *&nbsp;</td>
          <td class="mdname" nowrap> <em>g</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>unsigned char *&nbsp;</td>
          <td class="mdname" nowrap> <em>b</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>number_of_locations</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return RGB at point XY of image, Input: resolution - resolution, x - array with points X coordinate, y - array with points Y coordinate, number_of_locations - number of points, Output: r - R component at points XY of image, g - G component at points XY of image, b - B component at points XY of image, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a57" doxytag="GisApi.h::Get_image_grid"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_image_grid           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>xmin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>ymin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>unsigned char *&nbsp;</td>
          <td class="mdname" nowrap> <em>r</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>unsigned char *&nbsp;</td>
          <td class="mdname" nowrap> <em>g</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>unsigned char *&nbsp;</td>
          <td class="mdname" nowrap> <em>b</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return RGB at points XY of original grid, Input: resolution - resolution, xmin - minimum X coordinate of points window, xmax - maximum X coordinate of points window, ymin - minimum Y coordinate of points window, ymax - maximum Y coordinate of points window, Output: r - R component at points XY of selected window, g - G component at points XY of selected window, b - B component at points XY of selected window, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a42" doxytag="GisApi.h::Get_image_ncols"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_image_ncols           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>cols</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return number of columns of original image (for texture wrapping) grid, Input: none, Output: cols - number of columns of original grid, Return: 0 if error, 1 otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a39" doxytag="GisApi.h::Get_image_nrows"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_image_nrows           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>rows</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return number of rows of original image (for texture wrapping) grid, Input: none, Output: rows - number of rows of original grid, Return: 0 if error, 1 otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a36" doxytag="GisApi.h::Get_image_resolution"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_image_resolution           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>resolution</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return original resolution of image (for texture wrapping) grid, Input: none, Output: resolution - resolution, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a33" doxytag="GisApi.h::Get_image_window"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_image_window           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xmin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ymin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ymax</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of active window of the image (for texture wrapping), Input: none, Output: xmin - minimum X coordinate of active region, xmax - maximum X coordinate of active region, ymin - minimum Y coordinate of active region, ymax - maximum Y coordinate of active region, Return: 0 if error, 1 otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a19" doxytag="GisApi.h::Get_image_xmax"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_image_xmax           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xmax</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of original image (for texture wrapping) grid, Input: resolution - resolution, Output: xmax - maximum X coordinate of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a22" doxytag="GisApi.h::Get_image_xmin"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_image_xmin           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xmin</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of original image (for texture wrapping) grid, Input: resolution - resolution, Output: xmin - minimum X coordinate of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a25" doxytag="GisApi.h::Get_image_ymax"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_image_ymax           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ymax</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of original image (for texture wrapping) grid, Input: resolution - resolution, Output: ymax - maximum Y coordinate of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a28" doxytag="GisApi.h::Get_image_ymin"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_image_ymin           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ymin</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of original image (for texture wrapping) grid, Input: resolution - resolution, Output: ymin - minimum Y coordinate of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a34" doxytag="GisApi.h::Get_max_resolution"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_max_resolution           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>resolution</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return original resolution of elevation map grid, Input: none, Output: resolution - resolution, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a40" doxytag="GisApi.h::Get_number_of_columns"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_number_of_columns           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>cols</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return number of columns of original elevation map grid, Input: none, Output: cols - number of columns of original grid, Return: 0 if error, 1 otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a37" doxytag="GisApi.h::Get_number_of_rows"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_number_of_rows           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>rows</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return number of rows of original elevation map grid, Input: none, Output: rows - number of rows of original grid, Return: 0 if error, 1 otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a10" doxytag="GisApi.h::Get_raster_categories"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_raster_categories           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>n_categories</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return number of categories in a raster map Input: none, Output: n_categories - number of categories, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a16" doxytag="GisApi.h::Get_raster_category_name"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_raster_category_name           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>category_id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>category_name</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return category name the given category number, Input: category_id - category number, Output: category_name - category name, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a46" doxytag="GisApi.h::Get_raster_id"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_raster_id           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int *&nbsp;</td>
          <td class="mdname" nowrap> <em>category_id</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return category number at point XY of raster map, Input: resolution - resolution, x - point X coordinate, y - Point Y coordinate, Output: category_id - category number at point XY of raster map, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a51" doxytag="GisApi.h::Get_raster_id_array"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_raster_id_array           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double *&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int *&nbsp;</td>
          <td class="mdname" nowrap> <em>category_id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>number_of_locations</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return category number at points XY of raster map, Input: resolution - resolution, x - array with points X coordinate, y - array with points Y coordinate, number_of_locations - number of points, Output: category_id - category number at points XY of raster map, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a56" doxytag="GisApi.h::Get_raster_id_grid"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_raster_id_grid           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>xmin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>ymin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int *&nbsp;</td>
          <td class="mdname" nowrap> <em>category_id</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return category number at points XY of original grid, Input: resolution - resolution, xmin - minimum X coordinate of points window, xmax - maximum X coordinate of points window, ymin - minimum Y coordinate of points window, ymax - maximum Y coordinate of points window, Output: category_id - category number at points XY of selected window, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a41" doxytag="GisApi.h::Get_raster_ncols"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_raster_ncols           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>cols</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return number of columns of original raster (material) map grid, Input: none, Output: cols - number of columns of original grid, Return: 0 if error, 1 otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a38" doxytag="GisApi.h::Get_raster_nrows"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_raster_nrows           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>rows</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return number of rows of original raster (material) map grid, Input: none, Output: rows - number of rows of original grid, Return: 0 if error, 1 otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a35" doxytag="GisApi.h::Get_raster_resolution"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_raster_resolution           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>resolution</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return original resolution of raster (material) map grid, Input: none, Output: resolution - resolution, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a32" doxytag="GisApi.h::Get_raster_window"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_raster_window           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xmin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ymin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ymax</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of active window of the raster (material) map, Input: none, Output: xmin - minimum X coordinate of active region, xmax - maximum X coordinate of active region, ymin - minimum Y coordinate of active region, ymax - maximum Y coordinate of active region, Return: 0 if error, 1 otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a18" doxytag="GisApi.h::Get_raster_xmax"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_raster_xmax           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xmax</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of original raster (material map) grid, Input: resolution - resolution, Output: xmax - maximum X coordinate of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a21" doxytag="GisApi.h::Get_raster_xmin"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_raster_xmin           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xmin</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of original raster (material map) grid, Input: resolution - resolution, Output: xmin - minimum X coordinate of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a24" doxytag="GisApi.h::Get_raster_ymax"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_raster_ymax           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ymax</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of original raster (material map) grid, Input: resolution - resolution, Output: ymax - maximum Y coordinate of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a27" doxytag="GisApi.h::Get_raster_ymin"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_raster_ymin           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ymin</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of original raster (material map) grid, Input: resolution - resolution, Output: ymin - minimum Y coordinate of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a44" doxytag="GisApi.h::Get_slope"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_slope           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xslope</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>yslope</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return slope at point XY of original grid, Input: resolution - resolution, x - point X coordinate, y - Point Y coordinate, Output: xslope - slope at point XY of original grid in X direction, yslope - slope at point XY of original grid in Y direction, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a49" doxytag="GisApi.h::Get_slope_array"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_slope_array           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double *&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>y</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xslope</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>yslope</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>number_of_locations</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return slope at points XY of original grid, Input: resolution - resolution, x - array with points X coordinate, y - array with points Y coordinate, number_of_locations - number of points, Output: xslope - slopes at points XY of original grid in X direction, yslope - slopes at points XY of original grid in Y direction, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a54" doxytag="GisApi.h::Get_slope_grid"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_slope_grid           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>xmin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>ymin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>ymax</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>slope</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return elevation at points XY of original grid, Input: resolution - resolution, xmin - minimum X coordinate of points window, xmax - maximum X coordinate of points window, ymin - minimum Y coordinate of points window, ymax - maximum Y coordinate of points window, Output: elev - elevation at points XY of selected window, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a15" doxytag="GisApi.h::Get_vector_line"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_vector_line           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>line_index</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>line_x</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>line_y</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return number of lines in a vector map, Input: line_index - index of line, Output: line_x - line elements x coordinate, line_y - line elements y coordinate, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a13" doxytag="GisApi.h::Get_vector_line_label"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_vector_line_label           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>line_index</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>string *&nbsp;</td>
          <td class="mdname" nowrap> <em>line_str</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return line label for line with index line_index, Input: line_index - index of line, Output: line_str - line label, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a14" doxytag="GisApi.h::Get_vector_line_size"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_vector_line_size           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>line_index</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int *&nbsp;</td>
          <td class="mdname" nowrap> <em>line_size</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return number of elements for line with index line_index, Input: line_index - index of line, Output: line_size - number of line elements, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a12" doxytag="GisApi.h::Get_vector_line_type"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_vector_line_type           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>line_index</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>int *&nbsp;</td>
          <td class="mdname" nowrap> <em>line_type</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return line type for line with index line_index, Input: line_index - index of line, Output: line_type - line type, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a11" doxytag="GisApi.h::Get_vector_n_lines"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_vector_n_lines           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>n_lines</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return number of lines in a vector map, Input: none, Output: n_lines - number of lines, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a31" doxytag="GisApi.h::Get_window"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_window           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xmin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xmax</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ymin</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ymax</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of active window of the elevation map, Input: none, Output: xmin - minimum X coordinate of active region, xmax - maximum X coordinate of active region, ymin - minimum Y coordinate of active region, ymax - maximum Y coordinate of active region, Return: 0 if error, 1 otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a17" doxytag="GisApi.h::Get_xmax"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_xmax           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xmax</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of original elevation data grid, Input: resolution - resolution, Output: xmax - maximum X coordinate of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a20" doxytag="GisApi.h::Get_xmin"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_xmin           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>xmin</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of original elevation map grid, Input: resolution - resolution, Output: xmin - minimum X coordinate of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a23" doxytag="GisApi.h::Get_ymax"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_ymax           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ymax</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of original elevatio map grid, Input: resolution - resolution, Output: ymax - maximum Y coordinate of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a26" doxytag="GisApi.h::Get_ymin"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Get_ymin           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>resolution</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>double *&nbsp;</td>
          <td class="mdname" nowrap> <em>ymin</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return extents of original elevation map grid, Input: resolution - resolution, Output: ymin - minimum Y coordinate of original grid, Return: 0 if OK, see table otherwise. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a2" doxytag="GisApi.h::Initialize_GIS_data"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Initialize_GIS_data           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">char *&nbsp;</td>
          <td class="mdname" nowrap> <em>GISDbase</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>location</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>mapset</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>raster_file</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
initialize the GIS digital elevation map 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a4" doxytag="GisApi.h::Initialize_Image_data"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Initialize_Image_data           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">char *&nbsp;</td>
          <td class="mdname" nowrap> <em>GISDbase</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>location</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>mapset</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>raster_file</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
initialize the matching visual image map to cover the terrain (texture wrapping) for the gmfg viewer 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a3" doxytag="GisApi.h::Initialize_Raster_data"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Initialize_Raster_data           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">char *&nbsp;</td>
          <td class="mdname" nowrap> <em>GISDbase</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>location</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>mapset</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>raster_file</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
initialize the GIS material map 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a5" doxytag="GisApi.h::Initialize_Vector_data"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">int Initialize_Vector_data           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">char *&nbsp;</td>
          <td class="mdname" nowrap> <em>GISDbase</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>location</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>mapset</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td class="md"></td>
          <td class="md" nowrap>char *&nbsp;</td>
          <td class="mdname" nowrap> <em>vector_file</em></td>
        </tr>
        <tr>
          <td class="md"></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
initialize the matching vector data (where do you put symbols representing roads, bridges, buildings etc on the map) for the gmfg viewer 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="a58" doxytag="GisApi.h::Set_vector_scale"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top">void Set_vector_scale           </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>scale</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<table cellspacing="5" cellpadding="0" border="0">
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set vector scale, used to calculate precision, Input: scale - Scale of the vector data, ex.: 10000, API pre-defines scale at 50000. 
<p>
    </td>
  </tr>
</table>
<hr size="1"><address style="align: right;"><small>Generated on Tue Jul 3 12:45:53 2007 for Titan by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.3.9.1 </small></address>
</body>
</html>
