<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Titan: Member List</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.9.1 -->
<div class="qindex"><a class="qindex" href="index.html">Main&nbsp;Page</a> | <a class="qindex" href="namespaces.html">Namespace List</a> | <a class="qindex" href="hierarchy.html">Class&nbsp;Hierarchy</a> | <a class="qindex" href="annotated.html">Class&nbsp;List</a> | <a class="qindex" href="dirs.html">Directories</a> | <a class="qindex" href="files.html">File&nbsp;List</a> | <a class="qindex" href="functions.html">Class&nbsp;Members</a> | <a class="qindex" href="globals.html">File&nbsp;Members</a></div>
<h1>Element Member List</h1>This is the complete list of members for <a class="el" href="classElement.html">Element</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classElement.html#r20">adapted</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#n1">AssertMeshErrorFree</a>(HashTable *El_Table, HashTable *NodeTable, int numprocs, int myid, double loc)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r51">Awet</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r14">bcptr</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r23">brothers</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#n9">BSFC_combine_elements</a>(int side, Element *EmTemp, HashTable *HT_Elem_Ptr, HashTable *HT_Node_Ptr, int destination_proc)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a96">calc_d_gravity</a>(HashTable *El_Table)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a78">calc_edge_states</a>(HashTable *El_Table, HashTable *NodeTable, MatProps *matprops_ptr, int myid, double dt, int *order_flag, double *outflow)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a130">calc_elem_edge_wet_fraction</a>(int ineigh, int ifusewholeside)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a131">calc_elem_edge_wetness_factor</a>(int ineigh, double dt)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a110">calc_flux</a>(HashTable *NodeTable, FluxProps *fluxprops, TimeProps *timeprops)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a94">calc_flux_balance</a>(HashTable *NodeTable)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a97">calc_gravity_vector</a>(MatProps *matprops_ptr)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a81">calc_shortspeed</a>(double inv_dt)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a105">calc_stop_crit</a>(MatProps *)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a95">calc_topo_data</a>(MatProps *matprops_ptr)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a129">calc_wet_dry_orient</a>(HashTable *El_Table)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a46">calc_which_son</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a73">calculate_dx</a>(HashTable *NodeTable)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a100">change_neigh_info</a>(unsigned *fth_key, unsigned *ng_key, int neworder, int ng_gen, int fth_proc)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a35">change_neighbor</a>(unsigned *newneighbs, int which_side, int proc, int reg)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a50">change_neighbor_process</a>(int which, int newp)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a99">check_unrefinement</a>(HashTable *El_Table, double target)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r35">coefABCD</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#n13">construct_el</a>(Element *newelement, ElemPack *elem2, HashTable *HT_Node_Ptr, int myid, double *e_error)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a132">convect_dryline</a>(double VxVy[2], double dt)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r24">coord</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a58">copy_key_to_lb_key</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a80">correct</a>(HashTable *NodeTable, HashTable *El_Table, double dt, MatProps *matprops_ptr, FluxProps *fluxprops_ptr, TimeProps *timeprops_ptr, double *forceint, double *forcebed, double *eroded, double *deposited)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r48">counted</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#n12">create_element</a>(ElemPack *elem2, HashTable *HT_Elem_Ptr, HashTable *HT_Node_Ptr, int myid, double *e_error)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r39">curvature</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r41">d_gravity</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r30">d_state_vars</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#n5">delete_oldsons</a>(HashTable *El_Table, HashTable *NodeTable, int myid, void *EmFather)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#n11">destroy_element</a>(void *r_element, HashTable *HT_Elem_Ptr, HashTable *HT_Node_Ptr, int target_pro, ELinkPtr *EL_head)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a88">determine_refinement</a>(double)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r52">drypoint</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r32">dx</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r44">effect_bedfrict</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r46">effect_kactxy</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r45">effect_tanbedfrict</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r34">eigenvxymax</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r17">el_error</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r18">el_solution</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#n2">ElemBackgroundCheck</a>(HashTable *El_Table, HashTable *NodeTable, unsigned *debugkey, FILE *fp)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#n3">ElemBackgroundCheck2</a>(HashTable *El_Table, HashTable *NodeTable, void *EmDebug, FILE *fp)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a0">Element</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a1">Element</a>(unsigned nodekeys[][KEYLENGTH], unsigned neigh[][KEYLENGTH], int n_pro[], BC *b, int mat, int *elm_loc_in, double pile_height, int myid, unsigned *opposite_brother)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a2">Element</a>(unsigned nodekeys[][KEYLENGTH], unsigned neigh[][KEYLENGTH], int n_pro[], BC *b, int gen, int elm_loc_in[], int *ord, int gen_neigh[], int mat, Element *fthTemp, double *coord_in, HashTable *El_Table, HashTable *NodeTable, int myid, MatProps *matprops_ptr, int iwetnodefather, double Awetfather, double *drypoint_in)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a3">Element</a>(Element *sons[], HashTable *NodeTable, HashTable *El_Table, MatProps *matprops_ptr)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a4">Element</a>(FILE *fp, HashTable *NodeTable, MatProps *matprops_ptr, int myid)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r37">elevation</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r25">elm_loc</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a84">eval_velocity</a>(double xoffset, double yoffset, double VxVy[2])</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r9">father</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a98">find_brothers</a>(HashTable *El_Table, HashTable *NodeTable, double target, int myid, MatProps *matprops_ptr, void *NewFatherList, void *OtherProcUpdate)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a62">find_opposite_brother</a>(HashTable *)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a69">find_positive_x_side</a>(HashTable *)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r1">generation</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a34">get_adapted_flag</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a121">get_Awet</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a30">get_bcptr</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a16">get_brothers</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a85">get_coefABCD</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a103">get_coord</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a115">get_counted</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a91">get_curvature</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a90">get_d_gravity</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a66">get_d_state_vars</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a127">get_drypoint</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a68">get_dx</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a119">get_effect_bedfrict</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a120">get_effect_kactxy</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a79">get_eigenvxymax</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a51">get_el_err</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a27">get_el_error</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a26">get_el_solution</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a89">get_elevation</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a101">get_elm_loc</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a31">get_gen</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a87">get_gravity</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a109">get_influx</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a117">get_ithelem</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a125">get_iwetnode</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a86">get_kactxy</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a93">get_lam</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a56">get_lb_key</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a54">get_lb_weight</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a8">get_material</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a60">get_myprocess</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a42">get_neigh_gen</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a29">get_neigh_proc</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a28">get_neighbors</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a52">get_nelb_icon</a>(HashTable *, HashTable *, int *, int *)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a48">get_new_old</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a12">get_no_of_dof</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a61">get_opposite_brother_flag</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a21">get_order</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a70">get_positive_x_side</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a72">get_prev_state_vars</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a41">get_recv_flag</a>(int)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a33">get_refined_flag</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a40">get_send_flag</a>(int)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a82">get_shortspeed</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a71">get_slopes</a>(HashTable *, HashTable *, double)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a65">get_state_vars</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a9">get_stiffness</a>(HashTable *, HashTable *, double *, double *, Element *)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a107">get_stoppedflags</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a123">get_Swet</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a45">get_which_son</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a67">get_zeta</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a11">getassoc</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a22">getfather</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a10">getNode</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a24">getson</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r40">gravity</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#n0">HashTable</a> class</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a113">if_first_buffer_boundary</a>(HashTable *ElemTable, double contour_height)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a114">if_next_buffer_boundary</a>(HashTable *ElemTable, HashTable *NodeTable, double contour_height)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a111">if_pile_boundary</a>(HashTable *ElemTable, double contour_height)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a112">if_source_boundary</a>(HashTable *ElemTable)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r47">Influx</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a74">insert_coord</a>(HashTable *NodeTable)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r49">ithelem</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r50">iwetnode</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r36">kactxy</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r6">key</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r42">lam</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r5">lb_key</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r4">lb_weight</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r3">material</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r0">myprocess</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r15">ndof</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r13">neigh_gen</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r11">neigh_proc</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r8">neighbor</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r22">new_old</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r16">no_of_eqns</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r7">node_key</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#n4">NodeBackgroundCheck</a>(HashTable *El_Table, HashTable *NodeTable, unsigned *debugkey, FILE *fp)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r2">opposite_brother_flag</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r12">order</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#n10">Pack_element</a>(void *sendel, ElemPack *elem, HashTable *HT_Node_Ptr, int destination_proc)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a7">pass_key</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r33">positive_x_side</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r29">prev_state_vars</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a37">put_adapted_flag</a>(int new_adapted_status)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a122">put_Awet</a>(double Awet_in)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a104">put_coord</a>(double *coord_in)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a116">put_counted</a>(int countedvalue)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a128">put_drypoint</a>(double *drypoint_in)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a102">put_elm_loc</a>(int *int_in)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a23">put_father</a>(unsigned fatherin[KEYLENGTH])</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a13">put_gen</a>(int)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a64">put_height</a>(double pile_height)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a63">put_height_mom</a>(double pile_height, double xmom, double ymom)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a118">put_ithelem</a>(int i)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a126">put_iwetnode</a>(int iwetnode_in)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a92">put_lam</a>(double lam_in)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a57">put_lb_key</a>(unsigned *in_key)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a55">put_lb_weight</a>(double dd_in)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a59">put_myprocess</a>(int in_proc)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a43">put_neigh_gen</a>(int i, int gen)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a19">put_neigh_proc</a>(int i, int proc)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a47">put_new_old</a>(int i)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a20">put_order</a>(int, int)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a39">put_recv_flag</a>(int, int)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a36">put_refined_flag</a>(int i)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a38">put_send_flag</a>(int, int)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a83">put_shortspeed</a>(double shortspeedin)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a106">put_stoppedflags</a>(int stoppedflagsin)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a124">put_Swet</a>(double Swet_in)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a44">put_which_son</a>(int)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a17">putassoc</a>(int a, int i)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a15">putbrothers</a>(unsigned *)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a25">putel_sq</a>(double solsq, double ellsq)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a18">putneighbor</a>(unsigned *n, int i)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a14">putson</a>(unsigned *)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r27">recv</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#n6">refine_neigh_update</a>(HashTable *El_Table, HashTable *NodeTable, int numprocs, int myid, void *RefinedList, TimeProps *timeprops_ptr)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r19">refined</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a6">save_elem</a>(FILE *fp, FILE *fptxt)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r26">send</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r31">shortspeed</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r10">son</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r28">state_vars</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r43">stoppedflags</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r53">Swet</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#n8">unrefine_interp_neigh_update</a>(HashTable *El_Table, HashTable *NodeTable, int nump, int myid, void *OtherProcUpdate)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#n7">unrefine_neigh_update</a>(HashTable *El_Table, HashTable *NodeTable, int myid, void *NewFatherList)</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a49">update_ndof</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a53">void_bcptr</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a32">which_neighbor</a>(unsigned *FindNeigh)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r21">which_son</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a76">xdirflux</a>(MatProps *matprops_ptr, double dz, double thissideSwet, double hfv[3][NUM_STATE_VARS], double hrfv[3][NUM_STATE_VARS])</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a77">ydirflux</a>(MatProps *matprops_ptr, double dz, double thissideSwet, double hfv[3][NUM_STATE_VARS], double hrfv[3][NUM_STATE_VARS])</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a75">zdirflux</a>(HashTable *El_Table, HashTable *NodeTable, MatProps *matprops_ptr, int order_flag, int dir, double hfv[3][NUM_STATE_VARS], double hrfv[3][NUM_STATE_VARS], Element *EmNeigh, double dt)</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a108">zero_influx</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#r38">zeta</a></td><td><a class="el" href="classElement.html">Element</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classElement.html#a5">~Element</a>()</td><td><a class="el" href="classElement.html">Element</a></td><td></td></tr>
</table><hr size="1"><address style="align: right;"><small>Generated on Tue Jul 3 12:45:53 2007 for Titan by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.3.9.1 </small></address>
</body>
</html>
