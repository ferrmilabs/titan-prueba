\hypertarget{refine2_8C}{
\section{refine2.C File Reference}
\label{refine2_8C}\index{refine2.C@{refine2.C}}
}
{\tt \#include \char`\"{}../header/hpfem.h\char`\"{}}\par
\subsection*{Functions}
\begin{CompactItemize}
\item 
void \hyperlink{refine2_8C_a0}{fhsfc2d\_\-} (double, unsigned, unsigned)
\item 
void \hyperlink{refine2_8C_a1}{hsfc2d} (unsigned $\ast$, unsigned $\ast$, unsigned $\ast$)
\item 
void \hyperlink{refine2_8C_a2}{create\_\-new\_\-node} (int, int, int, \hyperlink{classHashTable}{Hash\-Table} $\ast$, \hyperlink{classNode}{Node} $\ast$\mbox{[}$\,$\mbox{]}, unsigned\mbox{[}$\,$\mbox{]}\mbox{[}2\mbox{]}, int, int $\ast$, int, int, \hyperlink{structMatProps}{Mat\-Props} $\ast$)
\item 
void \hyperlink{refine2_8C_a3}{refine} (\hyperlink{classElement}{Element} $\ast$Em\-Temp, \hyperlink{classHashTable}{Hash\-Table} $\ast$HT\_\-Elem\_\-Ptr, \hyperlink{classHashTable}{Hash\-Table} $\ast$HT\_\-Node\_\-Ptr, \hyperlink{structMatProps}{Mat\-Props} $\ast$matprops\_\-ptr)
\item 
void \hyperlink{refine2_8C_a4}{create\_\-new\_\-node} (int which, int Node1, int Node2, \hyperlink{classHashTable}{Hash\-Table} $\ast$HT\_\-Node\_\-Ptr, \hyperlink{classNode}{Node} $\ast$Node\-Temp\mbox{[}$\,$\mbox{]}, unsigned New\-Node\-Key\mbox{[}$\,$\mbox{]}\mbox{[}\hyperlink{constant_8h_a10}{KEYLENGTH}\mbox{]}, int info, int $\ast$Ref\-Ne, int boundary, int order, \hyperlink{structMatProps}{Mat\-Props} $\ast$matprops\_\-ptr)
\end{CompactItemize}


\subsection{Function Documentation}
\hypertarget{refine2_8C_a4}{
\index{refine2.C@{refine2.C}!create_new_node@{create\_\-new\_\-node}}
\index{create_new_node@{create\_\-new\_\-node}!refine2.C@{refine2.C}}
\subsubsection[create\_\-new\_\-node]{\setlength{\rightskip}{0pt plus 5cm}void create\_\-new\_\-node (int {\em which}, int {\em Node1}, int {\em Node2}, \hyperlink{classHashTable}{Hash\-Table} $\ast$ {\em HT\_\-Node\_\-Ptr}, \hyperlink{classNode}{Node} $\ast$ {\em Node\-Temp}\mbox{[}$\,$\mbox{]}, unsigned {\em New\-Node\-Key}\mbox{[}$\,$\mbox{]}\mbox{[}KEYLENGTH\mbox{]}, int {\em info}, int $\ast$ {\em Ref\-Ne}, int {\em boundary}, int {\em order}, \hyperlink{structMatProps}{Mat\-Props} $\ast$ {\em matprops\_\-ptr})}}
\label{refine2_8C_a4}


\hypertarget{refine2_8C_a2}{
\index{refine2.C@{refine2.C}!create_new_node@{create\_\-new\_\-node}}
\index{create_new_node@{create\_\-new\_\-node}!refine2.C@{refine2.C}}
\subsubsection[create\_\-new\_\-node]{\setlength{\rightskip}{0pt plus 5cm}void create\_\-new\_\-node (int, int, int, \hyperlink{classHashTable}{Hash\-Table} $\ast$, \hyperlink{classNode}{Node} $\ast$\mbox{[}$\,$\mbox{]}, unsigned\mbox{[}$\,$\mbox{]}\mbox{[}2\mbox{]}, int, int $\ast$, int, int, \hyperlink{structMatProps}{Mat\-Props} $\ast$)}}
\label{refine2_8C_a2}


\hypertarget{refine2_8C_a0}{
\index{refine2.C@{refine2.C}!fhsfc2d_@{fhsfc2d\_\-}}
\index{fhsfc2d_@{fhsfc2d\_\-}!refine2.C@{refine2.C}}
\subsubsection[fhsfc2d\_\-]{\setlength{\rightskip}{0pt plus 5cm}void fhsfc2d\_\- (double, unsigned, unsigned)}}
\label{refine2_8C_a0}


\hypertarget{refine2_8C_a1}{
\index{refine2.C@{refine2.C}!hsfc2d@{hsfc2d}}
\index{hsfc2d@{hsfc2d}!refine2.C@{refine2.C}}
\subsubsection[hsfc2d]{\setlength{\rightskip}{0pt plus 5cm}void hsfc2d (unsigned $\ast$, unsigned $\ast$, unsigned $\ast$)}}
\label{refine2_8C_a1}


\hypertarget{refine2_8C_a3}{
\index{refine2.C@{refine2.C}!refine@{refine}}
\index{refine@{refine}!refine2.C@{refine2.C}}
\subsubsection[refine]{\setlength{\rightskip}{0pt plus 5cm}void refine (\hyperlink{classElement}{Element} $\ast$ {\em Em\-Temp}, \hyperlink{classHashTable}{Hash\-Table} $\ast$ {\em HT\_\-Elem\_\-Ptr}, \hyperlink{classHashTable}{Hash\-Table} $\ast$ {\em HT\_\-Node\_\-Ptr}, \hyperlink{structMatProps}{Mat\-Props} $\ast$ {\em matprops\_\-ptr})}}
\label{refine2_8C_a3}


